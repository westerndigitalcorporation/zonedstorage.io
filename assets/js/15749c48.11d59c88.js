"use strict";(self.webpackChunkzonedstorage_io=self.webpackChunkzonedstorage_io||[]).push([[3100],{1173:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"device-mapper/dm-flakey","title":"dm-flakey","description":"The dm-flakey target is similar to the dm-linear target, except that it","source":"@site/docs/device-mapper/dm-flakey.md","sourceDirName":"device-mapper","slug":"/device-mapper/dm-flakey","permalink":"/docs/device-mapper/dm-flakey","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"dm-flakey","title":"dm-flakey","sidebar_label":"dm-flakey"},"sidebar":"docs","previous":{"title":"dm-zoned","permalink":"/docs/device-mapper/dm-zoned"},"next":{"title":"dm-delay","permalink":"/docs/device-mapper/dm-delay"}}');var i=r(4848),d=r(8453);const s={id:"dm-flakey",title:"dm-flakey",sidebar_label:"dm-flakey"},l="dm-flakey",a={},o=[{value:"Error modes",id:"error-modes",level:2},{value:"Zoned Block Device Restrictions",id:"zoned-block-device-restrictions",level:2},{value:"Examples",id:"examples",level:2}];function c(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dm-flakey",children:"dm-flakey"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"dm-flakey"})," target is similar to the ",(0,i.jsx)(n.em,{children:"dm-linear"})," target, except that it\nperiodically exhibits unreliable behavior. This target is useful for simulating\nfailing devices during testing. In the case of zoned block devices,\nsimulating write errors to sequential zones can help to debug application\nwrite-pointer management."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"dm-flakey"})," works like this: at the time the table is loaded, the device does\nnot generate errors for some seconds (",(0,i.jsx)(n.em,{children:"up"})," time), but then exhibits unreliable\nbehavior for ",(0,i.jsx)(n.em,{children:"down"})," seconds. This cycle then repeats."]}),"\n",(0,i.jsx)(n.h2,{id:"error-modes",children:"Error modes"}),"\n",(0,i.jsx)(n.p,{children:"Several error-simulation behaviors can be configured."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"drop_writes"})," All write I/Os are silently ignored and dropped. Read I/Os\nare handled correctly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"error_writes"})," All write I/Os are failed with an error signaled. Read I/Os\nare handled correctly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"corrupt_bio_byte"})," During the ",(0,i.jsx)(n.em,{children:"down"})," time, replace the Nth byte of the\ndata of each read or write block I/O with a specified value."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The default error mode is to fail all I/O requests during the ",(0,i.jsx)(n.em,{children:"down"})," time of the\nsimulation cycle."]}),"\n",(0,i.jsx)(n.h2,{id:"zoned-block-device-restrictions",children:"Zoned Block Device Restrictions"}),"\n",(0,i.jsxs)(n.p,{children:["The same zone alignment restrictions that apply to the\n",(0,i.jsx)(n.a,{href:"/docs/device-mapper/dm-linear",children:(0,i.jsx)(n.em,{children:"dm-linear"})})," target also apply to ",(0,i.jsx)(n.em,{children:"dm-flakey"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"dm-flakey"})," detailed documentation and usage examples can be found in the kernel\nsource code documentation file ",(0,i.jsx)("a",{href:"https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/device-mapper/dm-flakey.rst",target:"_blank",children:"Documentation/admin-guide/device-mapper/dm-flakey.rst"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(6540);const i={},d=t.createContext(i);function s(e){const n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);